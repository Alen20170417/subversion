      * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      *                                                     *
      *  THIS RELEASE STREAM IS *OPEN* FOR CHANGES.         *
      *                                                     *
      * * * * * * * * * * * * * * * * * * * * * * * * * * * *

This file tracks the status of releases in the 1.9.x line.

See http://subversion.apache.org/docs/community-guide/releasing.html#release-stabilization
for details on how release lines and voting work, what kinds of bugs can
delay a release, etc.

Status of 1.9.0:

1.9.0 release blockers:
=======================

 * r1664078,r1664080,r1664187,r1664191,r1664200,r1664344,r1664588,r1664927
   Instead of making more changes to the auth batons from ra sessions, reduce
   the number of changes by introducing an internal slave auth baton feature.
   Justification:
     Without this patch (or a complete redesign of the auth layer), the
     ra sessions cache (currently on a feature branch), will open the ra
     sessions from outside configuration changes caused by opening other
     ra sessions. This patch not only reverts the additional changes to the
     auth baton on init that are new in 1.9, but also removes cases where we
     already applied similar changes inside specific ra providers.
   Notes:
     The reason I group this under release blockers, is to avoid the behavior
     change introduced in r1609499 from reaching released versions. The changes
     itself are safe for a later backport as it only affects ra-session
     internal state.
   Votes:
     +1: rhuijben, brane

1.9.0 candidate changes that cannot go into a later 1.9.x:
==========================================================

 * r1663338, r1663347
   Properly record resolving of individual property conflicts.
   Justification:
     Fixes a few implementation bugs in the resolver code and exposes the
     api for more users than those that pass a callback function.
   Notes:
     Bert says it changes a public API and so needs to go into 1.9.0: see
     http://colabti.org/irclogger/irclogger_log/svn-dev?date=2015-03-10#l93
     .
     rhuijben: While the new feature of allowing the resolving of individual
     properties is not a release blocker to me, the known buggy behavior of
     the current code that may cause unuexpected loss of properties and
     conflict data is.
     .
     The part of the patch that enables the new feature is very small
     compared to the part that fixes the issue, and the regression
     test would be at least tree times harder to write and review without
     enabling the resolving of individual property conflicts.
     .
     Note that not being able to resolve individual property conflicts
     on update/switch/merge is a regression against 1.7.x, where we didn't
     switch to resolving after the update completed yet.
     .
   Votes:
     +1: rhuijben
     +0: brane (Backport merge causes new -Wshadow warning at
                subversion/libsvn_wc/conflicts.c:2360; otherwise +1.
                By the way, I don't see any API change here.)

Other candidate changes:
========================

 * r1663183, r1663184
   Introduce build support for Visual Studio "2015"
   Justification:
     Unbreaks building with the VS version that should be released somewhere
     later this year.
   Notes:
     Includes a few generator fixes, and compilation fixes of utf8proc.c.
   Votes:
     +1: rhuijben, brane

 * r1663671
   Improve obstructing working copy detection in the update editor
   Justification:
     Avoids doing unrecoverable damage to wc.db on invalid editor
     operations in cases where that isn't necessary. Github's
     Subversion compatibility triggers this problem in some sparse
     working copy scenarios.
   Notes:
     This is not a regression against 1.8.x.
   Votes:
     +1: rhuijben

 * r1663791
   Trivial typo fix in error message.
   Justification:
     Fixes a typo.
   Votes:
     +1: brane, rhuijben

 * r1663991
   Fix calculating the repository path after commits of nodes that are
   shadowing a switched (not-present) node.
   Justification:
     Allows introducing repository paths in the working copy, that don't
     reflect the repository state.
   Votes:
     +1: rhuijben

 * r1664035
   Keep track of changes when a file external is replace by a real file
   Justification:
     When a file-external is deleted, there might be a real node that
     want to take its place. This patch makes svn update introduce a
     not present marker node, so a follow-up update will bring in the
     new file (that was previously reported as skipped)
   Notes:
     To implement this some features had to be added to the generic
     base remove function.
   Votes:
     +1: rhuijben

 * r1663738
   Stop exposing and prohibit changing internal txn props through FS API
   Justification:
     Prevents an implementation detail leak.  Prohibits changing the
     internal behavior of our transactions via public API.  Avoids a situation
     with the API function call discarding the data and falsely reporting
     success for "set" operations with 'svn:client-date' properties, i.e.,
     with the API telling us that the operation completed successfully when
     the change itself was not applied.  (The last part is new-in-1.9.)
   Notes:
     While this is mostly an API correctness fix, there is a user-visible
     consequence of 'svnlook proplist' no longer leaking internal properties
     like svn:check-locks for transactions.
   Votes:
     +1: kotkov, rhuijben
     +0: philip (the new behaviour is fine but so is the old behaviour.
         svn:client-date is internal so does not have to obey the
         rules that apply to user properties. The proplist "leak" is
         strictly a regression as it is no longer possible to determine
         whether the CHECK_LOCKS flag is set on a txn.)

 * r1664193
   Fix win32 resource generation for svnbench.exe
   Justification:
     Trivial change to generate version resource for application.
   Votes:
     +1: rhuijben

 * r1664476, r1664480, r1664481, r1664483, r1664507, r1664520, r1664521, r1664523, r1664526, r1664527
   Automatic create sqlite_stat1 table in wc.db if it doesn't exist.
   Justification:
     Avoid performance regression on some old working copies.
   Notes:
     This stats table provides very valuable hints to the sqlite query
     optimizer. Sqlite 3.8.x needs this for most of our queries.
     .
     See "Manual Control Of Query Plans Using SQLITE_STAT Tables"
     on https://www.sqlite.org/optoverview.html#manctrl
   Votes:
     +1: philip
     +1: rhuijben (r1664476, r1664480, r1664481, r1664483, r1664507)
     +1: rhuijben (r1664521, r1664523, r1664526, r1664527) after merging the
         r1664531 group. Until then +0.5 as the new test causes a 14 sec
         delay in the testsuite even on a ramdrive.

 * r1664653
   Fix segfault when performing 'svn cp --pin-externals WC URL' against old
   server over http.
   Justification:
     Fixes segfault on --disable-http-v2.
   Votes:
     +1: rhuijben

 * r1664664, r1664672, r1664674
   Make detection of invalid (newer than HEAD) base revision on commit behave
   the same on all RA layers.
   Justification:
     The error was visible when the http-v1 dav protocol was used. I think it
     is a better fix to backport the check to the other layers than to hide
     the problem.
   Votes:
     +1: rhuijben

 * r1664684
   svnrdump: don't provide HEAD+1 as base revision when loading deletes.
   Justification:
     Our own tools should be well behaved.
   Votes:
     +1: rhuijben

 * r1664997
   Fix test failures when running from a directory whose name contains
   characters which must be escaped when used in a URL.
   Justification:
     User reported problem when testing 1.9 beta.
   Votes:
     +1: rhuijben

 * r1665195
   Produce an easier to understand error when a server sends a HTTP 405 code
   Justification:
     Just reporting out of date doesn't hint a user that he should
     switch/relocate to the location where he is allowed to commit.
   Votes:
     +1: rhuijben

 * r1665213, r1665259, r1665609
   Fix cases of serf's svn_ra_get_dir2() and svn_ra_get_log2() breaking the
   ra session for further operations.
   Justification:
     Without this fix the next session usage after this operation may
     accidentally process the result of a still outstanding request.
   Notes:
     If caller just passed a scratch pool for a single request things would
     usually have worked fine, but if not...
   Votes:
     +1: rhuijben

 * r1665318
   Make lock/unlock result reporting consistent over ra layers and fs backends
   Justification:
     With the 1.9 redesign of multiple locks in a single operation differences
     between the different ra layers were introduced in how out of date
     revisions are reported. This patch makes the behavior consistent, which
     in turn will help clients produce a more stable result.
     (This resolves multiple long standing AnkhSVN issues that I wasn't
      aware of)
   Notes:
     The regression test on trunk tests a bit more behavior than is backported
     here. Check r1665319 for details on what is ensured on trunk now.
   Votes:
     +1: rhuijben

Veto-blocked changes:
=====================

Approved changes:
=================

 * r1665164
   Fix Python SWIG reference counting in svn_fs_[un]lock_many.
   Justification:
     Python interpreter may crash.
   Votes:
     +1: philip, danielsh

 * r1665611, r1665612
   Improve set of versions of httpd with known encoding issues.
   Justification:
     Prevents spurious test suite failures against older versions of httpd.
   Votes:
     +1: breser, rhuijben, brane

 * r1664531, r1664532
   Improve database usage in entries-test to speed up test runs
   Justification:
     Use of the non deprecated function to check if the working copy is
     locked avoids re-opening the database for each and every directory.
     This decreases the total time to run the testsuite by > 2%, by just
     reducing the number of db operations.
   Votes:
     +1: rhuijben, philip, brane
