      * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      *                                                     *
      *  THIS RELEASE STREAM IS *OPEN* FOR CHANGES.         *
      *                                                     *
      * * * * * * * * * * * * * * * * * * * * * * * * * * * *

This file tracks the status of releases in the 1.9.x line.

See http://subversion.apache.org/docs/community-guide/releasing.html#release-stabilization
for details on how release lines and voting work, what kinds of bugs can
delay a release, etc.

Status of 1.9.0:

Release blockers for 1.9.0:
===========================

Candidate changes that cannot go into a later 1.9.x:
====================================================

 * r1674301, r1674305, r1674308
   --config-option: Warn when the FILE:SECTION:OPTION combination may be
   invalid.
   Justification:
     Silently accepting invalid input is bad.
   Votes:
     +1: danielsh (1.9.0 only) (for reason given by Bert; not a problem if it
                                only gets released in 1.10.0)
     +0.8: rhuijben (for 1.9.0. Last minute change)
     -0.5: rhuijben (after 1.9.0. Changes error behavior. Might break scrips)

Other candidate changes:
========================

 * r1664035
   Keep track of changes when a file external is replace by a real file
   Justification:
     When a file-external is deleted, there might be a real node that
     want to take its place. This patch makes svn update introduce a
     not present marker node, so a follow-up update will bring in the
     new file (that was previously reported as skipped)
   Notes:
     To implement this some features had to be added to the generic
     base remove function.
   Votes:
     +1: rhuijben, brane

 * r1666965, r1667120
   mod_dav_svn: Emit the first few 'svn log' items as soon as they are available.
   Justification:
     A slow svn log makes users call Subversion slow. This fixes the
     perceived performance problem by no longer optimizing just for
     obtaining all the results fast, but also for obtaining the first
     result fast.
     .
     Just the perceived slowness of common svn log operations might
     make users switch to a DVCS, while this slowness is just a buffering
     to make the total set of results come in faster. But I don't think
     there are that many users that really wait for all results of
     .
     $ svn log -q ^/subversion/trunk
     .
     This currently takes > 10 seconds before the first result using
     the EU mirror for me. By comparison, 'svn log --limit=1' takes
     0.2 seconds.
   Votes:
     +1: rhuijben, philip, brane
     +0: julianfoad (reviewed but not tested;
                     figures given in justification are for a 1.8 server but
                     a 1.9 server should have vastly quicker log computation)
     -0.5: kotkov (could not reproduce the improvement with a real-world 1.9
                   server; see my e-mail to <dev@subversion.apache.org>)

 * r1663671, r1666832
   Resolve an assertion on a bad update report involving incomplete status
   Justification:
     The tree conflict detection logic in the update editor wasn't
     designed to handle BASE adds, where the is an existing basenode. This
     patch makes the update logic handling properly handle this bad state
     for incomplete nodes, like it already does for status normal nodes.
     .
     Resolves a reproducable assertion in an restarted checkout against
     github.
   Votes:
     +1: rhuijben, stefan2

Veto-blocked changes:
=====================

Approved changes:
=================

 * r1663991, r1666258, r1674032
   Fix calculating the repository path after commits of nodes that are
   shadowing a switched (not-present) node.
   Justification:
     Allows introducing repository paths in the working copy, that don't
     reflect the repository state.
   Votes:
     +1: rhuijben, philip, brane

 * r1665213, r1665259, r1665609
   Fix cases of serf's svn_ra_get_dir2() and svn_ra_get_log2() breaking the
   ra session for further operations.
   Justification:
     Without this fix the next session usage after this operation may
     accidentally process the result of a still outstanding request.
     .
     svn_ra_get_dir2() and svn_ra_get_log2() are the easy to trigger examples,
     but propfind requests are just as vulnerable for keeping requests
     registered after returning with some error... If there wasn't a lucky pool
     cleanup inbetween further ra operations might access already freed memory,
     because the request continues processing.
   Notes:
     If caller just passed a scratch pool for a single request things would
     usually have worked fine, but if not...
   Votes:
     +1: rhuijben, stefan2, brane

 * r1664664, r1664672, r1664674
   Make detection of invalid (newer than HEAD) base revision on commit behave
   the same on all RA layers.
   Justification:
     The error was visible when the http-v1 dav protocol was used. I think it
     is a better fix to backport the check to the other layers than to hide
     the problem.
   Branch:
     ^/subversion/1.9.x-r1664664
   Votes:
     +1: rhuijben, philip, brane
     +1: stefan2 (before branch)

 * r1667228, r1667234, r1667249, r1667250, r1667258, r1667290, r1667691, r1667692, r1667693
   Fix various problems with binary file conflicts.
   Justification:
     Conflict description API violates its own promises for binaries.
     Current behaviour can cause user confusion since conflict prompt
     options for binary files won't work as expected.
   Notes:
     r1667258, r1667290 resolve a performance regression introduced by the
     code which now needs the actual property values. It also avoids creating temporary
     files for property conflicts in cases where a caller can never use them.
   Votes:
     +1: rhuijben, stefan2, brane, philip
     +1: stsp (r1667228, r1667234, r1667249, r1667250, r1667691, r1667692, r1667693 only)
