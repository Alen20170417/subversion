      * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      *                                                     *
      *  THIS RELEASE STREAM IS *OPEN* FOR CHANGES.         *
      *                                                     *
      * * * * * * * * * * * * * * * * * * * * * * * * * * * *

This file tracks the status of releases in the 1.9.x line.

See http://subversion.apache.org/docs/community-guide/releasing.html#release-stabilization
for details on how release lines and voting work, what kinds of bugs can
delay a release, etc.

Status of 1.9.0:

Release blockers for 1.9.0:
===========================

Candidate changes that cannot go into a later 1.9.x:
====================================================

 * r1673170, r1673172
   Introduce svn_fs_node_has_props() and use it where applicable
   Justification:
     Checking whether there are properties should be more efficient than
     retrieving all properties and then counting them. For directories above
     a certain size this takes > 95% of the processing time of 'svn ls -v'
   Notes:
     This patch just provides the api and updates callers to use it. Further
     patches (that are not 1.9.0 only) may then improve performance per
     filesystem implementation.
   Votes:
     +1: rhuijben (for 1.9.0 only)
     -0: stefan2 (waiting for the resolution of the DAV deadprop-count
                  issue currently being discussed; +1 once that's done)
     -1: ivan (until mod_dav_svn deadprop-count concerns will be resolved
               http://svn.haxx.se/dev/archive-2015-04/0068.shtml)

 * r1667228, r1667234, r1667249, r1667250, r1667691, r1667692, r1667693
   Fix various problems with binary file conflicts.
   Justification:
     Conflict description API violates its own promises for binaries.
     Current behaviour can cause user confusion since conflict prompt
     options for binary files won't work as expected.
   Notes:
     rhuijben: This nomination contains some revisions that are also in
     the r1667228 nomination. Perhaps these should be combined.
   Votes:
     +1: stsp

Other candidate changes:
========================

 * r1663991
   Fix calculating the repository path after commits of nodes that are
   shadowing a switched (not-present) node.
   Justification:
     Allows introducing repository paths in the working copy, that don't
     reflect the repository state.
   Votes:
     +1: rhuijben

 * r1664035
   Keep track of changes when a file external is replace by a real file
   Justification:
     When a file-external is deleted, there might be a real node that
     want to take its place. This patch makes svn update introduce a
     not present marker node, so a follow-up update will bring in the
     new file (that was previously reported as skipped)
   Notes:
     To implement this some features had to be added to the generic
     base remove function.
   Votes:
     +1: rhuijben

 * r1664664, r1664672, r1664674
   Make detection of invalid (newer than HEAD) base revision on commit behave
   the same on all RA layers.
   Justification:
     The error was visible when the http-v1 dav protocol was used. I think it
     is a better fix to backport the check to the other layers than to hide
     the problem.
   Votes:
     +1: rhuijben, stefan2

 * r1665213, r1665259, r1665609
   Fix cases of serf's svn_ra_get_dir2() and svn_ra_get_log2() breaking the
   ra session for further operations.
   Justification:
     Without this fix the next session usage after this operation may
     accidentally process the result of a still outstanding request.
     .
     svn_ra_get_dir2() and svn_ra_get_log2() are the easy to trigger examples,
     but propfind requests are just as vulnerable for keeping requests
     registered after returning with some error... If there wasn't a lucky pool
     cleanup inbetween further ra operations might access already freed memory,
     because the request continues processing.
   Notes:
     If caller just passed a scratch pool for a single request things would
     usually have worked fine, but if not...
   Votes:
     +1: rhuijben, stefan2

 * r1666965, r1667120
   mod_dav_svn: Emit the first few 'svn log' items as soon as they are available.
   Justification:
     A slow svn log makes users call Subversion slow. This fixes the
     perceived performance problem by no longer optimizing just for
     obtaining all the results fast, but also for obtaining the first
     result fast.
     .
     Just the perceived slowness of common svn log operations might
     make users switch to a DVCS, while this slowness is just a buffering
     to make the total set of results come in faster. But I don't think
     there are that many users that really wait for all results of
     .
     $ svn log -q ^/subversion/trunk
     .
     This currently takes > 10 seconds before the first result using
     the EU mirror for me. By comparison, 'svn log --limit=1' takes
     0.2 seconds.
   Votes:
     +1: rhuijben, philip
     +0: julianfoad (reviewed but not tested;
                     figures given in justification are for a 1.8 server but
                     a 1.9 server should have vastly quicker log computation)
     +0: kotkov (change looks good and passes the tests; will update the vote
                 after trying it on a couple of real-world repositories with
                 different HTTPD setups)

 * r1663671, r1666832
   Resolve an assertion on a bad update report involving incomplete status
   Justification:
     The tree conflict detection logic in the update editor wasn't
     designed to handle BASE adds, where the is an existing basenode. This
     patch makes the update logic handling properly handle this bad state
     for incomplete nodes, like it already does for status normal nodes.
     .
     Resolves a reproducable assertion in an restarted checkout against
     github.
   Votes:
     +1: rhuijben, stefan2

 * r1667228, r1667234, r1667250, r1667258, r1667290
   Improve binary file and property handling during conflict resolving
   Justification:
     Resolves a regression against 1.7 (and probably 1.8) where binary
     files are not handled as such. The patch also contains some correctness
     and performance fixes to avoid adding extra db operations on common
     code paths.
   Votes:
     +1: rhuijben

 * r1667471
   Fix bad assertion in diff callbacks
   Justification:
     Problem uncovered by 1.8.x code that still use these callbacks. On 1.9.x
     this code is only used from some deprecated libsvn_wc functions that
     used to drive the old diff code. Some third party tools might hit this
     problem.
   Votes:
     +1: rhuijben, stefan2

 * r1664593, r1664594, r1664596, r1667715
   On Windows allow reading configuration from system services
   Justification:
     In system services Subversion might be running as a very limited
     user that doesn't have a user profile (including user registry)
     loaded. In this case 1.9 currently fails without a proper error,
     where somehow 1.8 didn't see an error at all.
     .
     Some SharpSvn users use Subversion directly from their webserver
     to contact a Subversion server or read from an repository, to
     present a management interface... This causes some problems for
     these users.
   Notes:
     Easier to review the combined result as most patches partially
     undo the previous one.
   Votes:
     +1: rhuijben

 * r1669743, r1669945
   Restore FSFS representation sharing to its previous effectiveness.
   Justification:
     Without this patch, repositories may grow faster than necessary.
     Effected users include those that use plain add instead of copy to
     create branches and those that merge frequently between branches.
   Notes:
     r1669945 fixes the replacement condition and provides a test.
   Votes:
     +1: stefan2, danielsh

 * r1672295
   Fix Sqlite 3.8.9 query performance regression on externals
   Justification:
     The regression tests shouldn't fail.
     (And the query performance on working copies with an extreme
      number of externals defined on different paths shouldn't
      regress)
   Votes:
     +1: rhuijben
     -0: philip (mail to dev, delete EXTERNALS as done for other tables?)

 * r1673044, r1673063, r1673065
   Allow the auth command to match on certficiate details
   Justification:
     This was part of the whole point of the auth command, but got dropped
     inadvertently as part of the conversion to using an X.509 parser.
   Votes:
     +1: breser, stefan2

 * r1673153
   Significantly improve 'svn ls -v' on tag directories
   Justification:
     Simple patch that avoids retrieving 'has_props' for every node, which
     is then ignored saves 95% of the server side processing time on
     customer reported case.
   Votes:
     +1: rhuijben, stefan2

 * r1673197, r1673202, r1673204
   Avoid filling the representation cache with unneeded property info
   Justification:
     Not reading actual properties during 'svn ls -v' avoids trashing the
     memory cache that in this case might just drop the directory we are
     currently processing, causing a significant performance drop on
     tags directories above a certain size.
   Notes:
     Depends on the r1673170 group being backported to 1.9.0.
   Votes:
     +1: rhuijben, stefan2

Veto-blocked changes:
=====================

Approved changes:
=================

 * r1668599, r1668608
   Fixes to the public svn_io API declarations and documentation.
   Justification:
     Have a complete, correct and easily accessible API description.
     None of these changes should affect generated code nor the ABI.
   Votes:
     +1: stefan2, rhuijben, philip

 * r1668607, r1670337
   Fixes to the public svn_diff API declarations and documentation.
   Justification:
     Have a complete, correct and easily accessible API description.
     None of these changes should affect generated code nor the ABI.
   Votes:
     +1: stefan2, rhuijben, philip

 * r1673445
   Correct the FSFS structure description.
   Justification:
     Have correct documentation.
   Notes:
     This is a documentation-only fix and does not require additional
     voting.
   Votes:
     +1: stefan2

 * r1669746
   Rename svn_fs_node_same to svn_fs_node_unchanged in FS API.
   Justification:
     This clarifies the new "node relationship" concept introduced in 1.9.
     Neither calling it "same" (too strict) nor "equal" (too loose) would
     imply the intended semantics.  The sloppy and easily misinterpreted
     semantics of the similar svn_fs_compare_ids lead to false and fragile
     code (e.g. issue #4542).  Let's not repeat this.
   Votes:
     +1: stefan2, philip, stsp

 * r1673282
   Rename svn_relpath_limit to svn_relpath_prefix in the public API.
   Justification:
     This is a more appropriate name for this new function.
   Notes:
     If this does not become part of 1.9.0, r1673282 needs to be reverted
     on /trunk.
   Votes:
     +1: stefan2, rhuijben, philip

 * r1667233, r1667301
   Reject invalid get-location-segments requests in mod_dav_svn and svnserve.
   Justification:
     Security issue.
   Notes:
     r1667233 is the fix itself.  r1667301 fixes svnserve protocol violation
     when the sanity check in get_location_segments() fails.  The backport
     branch is required to avoid a trunk-specific behavior change in terms
     of the error code, i.e., to still use the SVN_ERR_INCORRECT_PARAMS
     instead of the SVN_ERR_FS_NO_SUCH_REVISION.
   Branch:
     ^/subversion/branches/1.9.x-r1667233
   Votes:
     +1: kotkov, philip, stefan2
     -0: rhuijben (causes an svn protocol error without further patches such
                   as the patch applied in r1667301; vote happened before
                   the '1.9.x-r1667233' backport branch)

 * r1671164, r1672578, r1673228
   Enable passing '-r' to 'svn status'
   Justification:
     Allows checking what changes when updating to some specific revision
     vs only to HEAD.
   Notes:
     We supported this feature in the libsvn_client api since <= 1.0.
   Votes:
     +1: philip, rhuijben, stefan2 (for 1.9.0 only)

 * r1668320
   ra_serf: resolve minor memory leak against very old servers
   Justification:
     ra operations shouldn't unnecessary grow the session pool.
   Votes:
     +1: rhuijben, philip, stefan2

 * r1673062
   Fix 2 error leaks in the X.509 code.
   Justification:
     Error leaks are bad and no reason to leave them unfixed.
   Votes:
     +1: breser, philip, stefan2
