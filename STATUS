      * * * * * * * * * * * * * * * * * * * * * * * * * * * *
      *                                                     *
      *  THIS RELEASE STREAM IS *OPEN* FOR CHANGES.         *
      *                                                     *
      * * * * * * * * * * * * * * * * * * * * * * * * * * * *

This file tracks the status of releases in the 1.9.x line.

See http://subversion.apache.org/docs/community-guide/releasing.html#release-stabilization
for details on how release lines and voting work, what kinds of bugs can
delay a release, etc.

Status of 1.9.0:

Release blockers for 1.9.0:
===========================

Candidate changes that cannot go into a later 1.9.x:
====================================================

 * r1664938, r1664939, r1664940, r1664978, r1664984
   libsvn_javahl: wrap and unwrap java exceptions via svn_error_t
   Justification:
     This patch makes Java callbacks that throw errors report
     their error to the subversion function that called them. This
     allows this function to properly handle the error condition instead
     of continuing as if nothing happened. If further callbacks are needed
     during error handling these callbacks will now just work and Subversion
     can ignore certain kinds of errors as needed, by just clearing the error.
   Votes:
     +1: rhuijben (not after 1.9.0), brane

Other candidate changes:
========================

 * r1663991
   Fix calculating the repository path after commits of nodes that are
   shadowing a switched (not-present) node.
   Justification:
     Allows introducing repository paths in the working copy, that don't
     reflect the repository state.
   Votes:
     +1: rhuijben

 * r1664035
   Keep track of changes when a file external is replace by a real file
   Justification:
     When a file-external is deleted, there might be a real node that
     want to take its place. This patch makes svn update introduce a
     not present marker node, so a follow-up update will bring in the
     new file (that was previously reported as skipped)
   Notes:
     To implement this some features had to be added to the generic
     base remove function.
   Votes:
     +1: rhuijben

 * r1664664, r1664672, r1664674
   Make detection of invalid (newer than HEAD) base revision on commit behave
   the same on all RA layers.
   Justification:
     The error was visible when the http-v1 dav protocol was used. I think it
     is a better fix to backport the check to the other layers than to hide
     the problem.
   Votes:
     +1: rhuijben, stefan2

 * r1665213, r1665259, r1665609
   Fix cases of serf's svn_ra_get_dir2() and svn_ra_get_log2() breaking the
   ra session for further operations.
   Justification:
     Without this fix the next session usage after this operation may
     accidentally process the result of a still outstanding request.
     .
     svn_ra_get_dir2() and svn_ra_get_log2() are the easy to trigger examples,
     but propfind requests are just as vulnerable for keeping requests
     registered after returning with some error... If there wasn't a lucky pool
     cleanup inbetween further ra operations might access already freed memory,
     because the request continues processing.
   Notes:
     If caller just passed a scratch pool for a single request things would
     usually have worked fine, but if not...
   Votes:
     +1: rhuijben

 * r1665318
   Make lock/unlock result reporting consistent over ra layers and fs backends
   Justification:
     With the 1.9 redesign of multiple locks in a single operation differences
     between the different ra layers were introduced in how out of date
     revisions are reported. This patch makes the behavior consistent, which
     in turn will help clients produce a more stable result.
     (This resolves multiple long standing AnkhSVN issues that I wasn't
      aware of)
     .
     Without this patch some ra layers report out of dates via the callback
     while others (read: serf) fail directly, causing locks not to be stored
     in the working copy, etc.
   Notes:
     The regression test on trunk tests a bit more behavior than is backported
     here. Check r1665319 for details on what is ensured on trunk now.
   Votes:
     +1: rhuijben

 * r1666965, r1667120
   mod_dav_svn: Emit the first few 'svn log' items as soon as they are available.
   Justification:
     A slow svn log makes users call Subversion slow. This fixes the
     perceived performance problem by no longer optimizing just for
     obtaining all the results fast, but also for obtaining the first
     result fast.
     .
     Just the perceived slowness of common svn log operations might
     make users switch to a DVCS, while this slowness is just a buffering
     to make the total set of results come in faster. But I don't think
     there are that many users that really wait for all results of
     .
     $ svn log -q ^/subversion/trunk
     .
     This currently takes > 10 seconds before the first result using
     the EU mirror for me. By comparison, 'svn log --limit=1' takes
     0.2 seconds.
   Votes:
     +1: rhuijben, philip
     +0: julianfoad (reviewed but not tested;
                     figures given in justification are for a 1.8 server but
                     a 1.9 server should have vastly quicker log computation)
     +0: kotkov (change looks good and passes the tests; will update the vote
                 after trying it on a couple of real-world repositories with
                 different HTTPD setups)

 * r1663671, r1666832
   Resolve an assertion on a bad update report involving incomplete status
   Justification:
     The tree conflict detection logic in the update editor wasn't
     designed to handle BASE adds, where the is an existing basenode. This
     patch makes the update logic handling properly handle this bad state
     for incomplete nodes, like it already does for status normal nodes.
     .
     Resolves a reproducable assertion in an restarted checkout against
     github.
   Votes:
     +1: rhuijben, stefan2

 * r1665894, r1667101
   Fix the noderev relatedness checks for FSFS (and FSX).
   Justification:
     Without this, the new public API function will return false results
     when comparing nodes from different transactions.  That constallation
     does not occur in our code but API users may want to use it to e.g.
     detect conflicts between transactions early.
   Votes:
     +1: stefan2, julianfoad
     +0.5: rhuijben (Patch looks ok. What about bdb? Automatically handled?)

 * r1667228, r1667234, r1667228, r1667250, r1667258, r1667290
   Improve binary file and property handling during conflict resolving
   Justification:
     Resolves a regression against 1.7 (and probably 1.8) where binary
     files are not handled as such. The patch also contains some correctness
     and performance fixes to avoid adding extra db operations on common
     code paths.
   Votes:
     +1: rhuijben
     +0: stsp (conflicts, needs a backport branch)
              (before the r1663338 group was backported)

 * r1667471
   Fix bad assertion in diff callbacks
   Justification:
     Problem uncovered by 1.8.x code that still use these callbacks. On 1.9.x
     this code is only used from some deprecated libsvn_wc functions that
     used to drive the old diff code. Some third party tools might hit this
     problem.
   Votes:
     +1: rhuijben

 * r1664593, r1664594, r1664596, r1667715
   On Windows allow reading configuration from system services
   Justification:
     In system services Subversion might be running as a very limited
     user that doesn't have a user profile (including user registry)
     loaded. In this case 1.9 currently fails without a proper error,
     where somehow 1.8 didn't see an error at all.
     .
     Some SharpSvn users use Subversion directly from their webserver
     to contact a Subversion server or read from an repository, to
     present a management interface... This causes some problems for
     these users.
   Notes:
     Easier to review the combined result as most patches partially
     undo the previous one.
   Votes:
     +1: rhuijben

 * r1668320
   ra_serf: resolve minor memory leak against very old servers
   Justification:
     ra operations shouldn't unnecessary grow the session pool.
   Votes:
     +1: rhuijben

Veto-blocked changes:
=====================

Approved changes:
=================
