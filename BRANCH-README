This branch exists for the development of ideas documented in
/trunk/notes/http-protocol-v2.txt.  It is being managed as a
reintegrate-able branch, with regular catch-up merges from the trunk.

TODO:

 * Teach mod_dav_svn to answer the OPTIONS request with these
   additional pieces of information:

      repository root URI    [DONE]
      repository UUID        [DONE]
      youngest revision      [DONE]
      me resource URI        [DONE]
      revision stub          [DONE]
      revision root stub     [DONE]
      transaction stub       [DONE]
      transaction root stub  [DONE]

 * Teach mod_dav_svn to recognize and correctly interpret URLs which
   make use of the new URI stubs:

      me resource URI       -> !svn/me  [DONE]
      revision stub         -> !svn/rev [STARTED]
      revision root stub    -> !svn/rvr [DONE]
      transaction stub      -> !svn/txn [STARTED]
      transaction root stub -> !svn/txr [STARTED]

 * Teach mod_dav_svn to handle POST against the "me resource",
   returning a transaction URI stub and transaction prop URI stub for
   further use in the commit.  [DONE]

 * Teach mod_dav_svn to notice and use 'If-match' headers in write
   requests aimed at transaction root resources.

      PROPPATCH
      DELETE
      PUT
      MKCOL
      COPY
      MOVE
      ...
      
 * Teach ra_serf operations to not do the multi-PROPFIND dance any
   more, but to fetch the information they seek from mod_dav_svn using
   the new stub URIs:

      get-file              -> GET (against pegrev URI)            [DONE]
      get-dir               -> PROPFIND (against pegrev URI)       [DONE]
      rev-prop              -> PROPFIND (against revision URI)     [DONE]
      rev-proplist          -> PROPFIND (against revision URI)     [DONE]
      check-path            -> PROPFIND (against pegrev URI)       [DONE]
      stat                  -> PROPFIND (against pegrev URI)       [DONE]
      get-lock              -> PROPFIND (against public HEAD URI)  [DONE]

 * Teach ra_serf REPORT-type requests to use the URI stubs where
   applicable, too:

      log                   -> REPORT (against pegrev URI)      [DONE]
      get-dated-rev         -> REPORT (against "me resource")   [DONE]
      get-deleted-rev       -> REPORT (against pegrev URI)      [DONE]
      get-locations         -> REPORT (against pegrev URI)      [DONE]
      get-location-segments -> REPORT (against pegrev URI)      [DONE]
      get-file-revs         -> REPORT (against pegrev URI)      [DONE]
      get-locks             -> REPORT (against public HEAD URI) [DONE]
      get-mergeinfo         -> REPORT (against pegrev URI)      [DONE]
      replay                -> REPORT (against "me resource")   [DONE]
      replay-range          -> REPORTs (against "me resource")  [DONE]

 * Teach ra_serf simple write requests to use new URI stubs:

      change-rev-prop       -> PROPPATCH (against revision URI)  [DONE]
      lock                  -> LOCK (against public HEAD URI)    [DONE]
      unlock                -> UNLOCK (against public HEAD URI)  [DONE]

 * Teach ra_serf to do update-style REPORTs a little differently:

    - REPORT against the new "me resource" instead of VCC URI  [DONE]
    - eliminate now-unnecessary wcprops cache
    - use pegrev URI stubs to avoid unnecessary PROPFIND discovery

 * Rework ra_serf commit editor implementation to use new direct
   methods as described in the design doc.

    - Use POST to 'me' resource to get txn name          [DONE]
    - Send write requests against txn and txn root URLs  [STARTED]
    - Abort edit with DELETE against the txn resource    [DONE]

 * Optional:  Do some of this stuff for ra_neon, too:

    - Get and cache UUID and repos_root from OPTIONS         [DONE]
    - Get me resource, and pegrev stub from OPTIONS          [DONE]
    - Use me resource instead of the VCC                     [STARTED]
    - Use pegrev stubs instead of get_baseline_info() walks  [STARTED]
    - Use rev stubs for revprop stuff
