This is a development branch, intended to implement RA context abstraction
layer in libsvn_client.

The branch should be maintained with catch-up merges from trunk.

The branch is going to be merged to trunk with detailed log message describing
all changes made in the branch.

STATUS
======

done:
- Initial implementation.
- Separate active and inactive session lists.

todo:
- Fix timeout in davautocheck tests at log_tests.py::log_diff_moved.
- Limit the number of unused open sessions.
- Run performance comparisons between trunk and branch to prove that
  the RA session cache does in fact speed things up.
- Add new RA capability to signal if RA session is stateless and reusable.
- Implement svn_client_close_all_sessions().
- Switch code to use new functions.

PROBLEM
=======

Currently Subversion client layer creates new RA session for every
svn_client_* call. Even more: some operations like svn_client_merge() used
to creates 10-15 RA sessions around the release of 1.8 (most bad cases
were fixed on trunk short after branching). Each session creation takes
significant amount of time: TCP connection, SSL handshake, authentication
and initial handshake. It easily could take several seconds over WAN.

PROPOSED SOLUTION
=================

The idea is introduce RA context abstraction layer for managing set of RA
sessions for different repositories and reuse them if possible. In the first
version it going to be implemented in libsvn_client as private layer, but
we can make it part of ra-loader in future.

LINKS
=====

[1] http://subversion.tigris.org/issues/show_bug.cgi?id=3763
[2] http://svn.haxx.se/dev/archive-2013-06/0164.shtml
